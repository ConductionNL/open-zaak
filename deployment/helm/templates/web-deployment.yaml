apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.settings.name }}-web
  labels:
    app.kubernetes.io/name: {{ .Values.settings.name }}-web
    app.kubernetes.io/part-of: {{ .Values.settings.name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "chart" . }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.settings.name }}-web
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.settings.name }}-web
        app.kubernetes.io/part-of: {{ .Values.settings.name }}
        helm.sh/chart: {{ include "chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      volumes:
        - name: {{ .Values.volume.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.volume.claimName }}

      containers:
        - name: {{ .Values.settings.name }}-web
          image: "openzaak/open-zaak:{{ .Values.settings.version }}"
          imagePullPolicy: {{ .Values.settings.pullPolicy }}

          resources:
            requests:
              memory: {{ .Values.web.memory }}
              cpu: {{ .Values.web.cpu }}
            limits:
              memory: {{ .Values.web.limits.memory }}
              cpu: {{ .Values.web.limits.cpu }}

          readinessProbe:
            httpGet:
              path: /
              port: 8000
              httpHeaders:
                - name: Host
                  value: localhost
            initialDelaySeconds: 30
            periodSeconds: 30

          livenessProbe:
            httpGet:
              path: /
              port: 8000
              httpHeaders:
                - name: Host
                  value: localhost
            initialDelaySeconds: 30
            periodSeconds: 30

          volumeMounts:
            - name: {{ .Values.volume.name }}
              mountPath: /app/private-media
              subPath: openzaak/{{ .Release.Name }}/private-media

          env:
            - name: ALLOWED_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: {{ template "fullname" . }}
                  key: allowed-hosts
            - name: DJANGO_SETTINGS_MODULE
              valueFrom:
                configMapKeyRef:
                  name: {{ template "fullname" . }}
                  key: module
            - name: DEBUG
              valueFrom:
                configMapKeyRef:
                  name: {{ template "fullname" . }}
                  key: debug

            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: secret-key
            - name: CACHE_DEFAULT
              valueFrom:
                configMapKeyRef:
                  name: {{ template "fullname" . }}
                  key: cache-default
            - name: CACHE_AXES
              valueFrom:
                configMapKeyRef:
                  name: {{ template "fullname" . }}
                  key: cache-axes

            - name: EMAIL_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: email-host
            - name: EMAIL_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: email-port
            - name: EMAIL_HOST_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: email-host-user
            - name: EMAIL_HOST_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: email-host-password

            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: db-host
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: db-port
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: db-user
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: db-name
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}
                  key: db-password

            {{- if $.Values.settings.dsn }}
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" .}}
                  key: sentry-dsn
            {{- end }}
  {{- if .Values.nodeSelector }}
      nodeSelector:
  {{ toYaml .Values.nodeSelector | indent 8 }}
  {{- end }}
